my own Bank Application front end angular and backend spring Boot application and rest service 


------------------------------------controller class  //presentation layer ---------------------------------------------------

package com.onlineBanking.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.onlineBanking.entity.UserEntity;
import com.onlineBanking.model.LoginModel;
import com.onlineBanking.model.User;
import com.onlineBanking.service.RegisterService;



//@CrossOrigin(origins = "*", maxAge = 3600)
//@RestController
//@RequestMapping("/user-service")

@RestController
public class UserController {
	
	@Autowired	
	private RegisterService registerService;
	
	@PostMapping("/register01")
	public String registerUser(@RequestBody User userModel) {
	//	User tempUser = registerService.getUserByEmail(registerModel.getEmail());
		if(userModel != null) {
			registerService.registerUser(userModel);
			//return ResponseEntity.status(HttpStatus.CREATED).build();
			return "you are successfully registered ";
		}
		//return ResponseEntity.status(HttpStatus.I_AM_A_TEAPOT).build();
		return "rigistration failed, try again ";
	}
	

	
	@PostMapping("/login")
	public UserEntity login(@RequestBody LoginModel loginModel) {
		if(loginModel != null) {
			registerService.login(loginModel);			
		}
		return  registerService.getUserByEmail(loginModel.getEmail());



	}
	
}



---------------------------------------service class  //busieness layer-------------------------------------------------------


package com.onlineBanking.service;

import com.onlineBanking.entity.UserEntity;
import com.onlineBanking.model.LoginModel;
import com.onlineBanking.model.User;

public interface RegisterService {
	
	
	void registerUser(User registerModel);

	public void saveUser(UserEntity user);
		
	public UserEntity getUserByEmail(String email);
	
	public boolean login(LoginModel loginModel);
}





-------------------------serviceIMPL----------------------------------------------------

package com.onlineBanking.service;

import java.util.Optional;

import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.RequestBody;

import com.onlineBanking.dao.RegisterDAO;
import com.onlineBanking.entity.UserEntity;
import com.onlineBanking.model.LoginModel;
import com.onlineBanking.model.User;

@Service
public class RegisterServiceImpl implements RegisterService
{
	
	@Autowired
	private RegisterDAO userDAO;

	/*public void saveUser(User user) {
		// TODO Auto-generated method stub
		
		UserEntity userentity = new UserEntity();
		userentity.setEmail(user.getEmail());
		userentity.setPassword(user.getPassword());
		userentity.setAcctNumber(user.getAccountNum());
		userentity.setUserName(user.getUserName());
 	    userDAO.save(userentity);
		
	}
	*/
	@Override
	@Transactional
	public void saveUser(UserEntity user) {
		userDAO.saveUser(user);
	}
	
	
	@Override
	@Transactional
	public UserEntity getUserByEmail(String email) {
		return userDAO.getUserByEmail(email);
	}

	@Override
	public void registerUser(User user) {
		// TODO Auto-generated method stub
		//User user = new User();
	//	user.setId(0);
		
		UserEntity userentity = new UserEntity();
		userentity.setEmail(user.getEmail());
		userentity.setPassword(user.getPassword());
		userentity.setAcctNumber(user.getAccountNum());
		//userentity.setUserName(user.getUserName());
 	    userDAO.saveUser(userentity);
		
	}


	@Override
	@Transactional
	public boolean login(LoginModel loginModel) {
		UserEntity user = userDAO.getUserByEmail(loginModel.getEmail());
		if(user != null) {
			return (loginModel.getPassword()).equals(user.getPassword());
		
		}
	
		return false;
	}
	


}


------------------------------------------repository class // persistent Layer---------------------------------------------

package com.onlineBanking.dao;

import java.util.Optional;

import org.springframework.data.repository.CrudRepository;

import com.onlineBanking.entity.UserEntity;
import com.onlineBanking.model.User;



public interface RegisterDAO  {
	
	public UserEntity getUserByEmail(String email);
	
	
	public void saveUser(UserEntity user);
	
}

----------------------------------DAO IMPL--------------------------------------------------------


package com.onlineBanking.dao;

import javax.persistence.EntityManager;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import org.springframework.stereotype.Service;
import org.hibernate.Session;
//import org.hibernate.query.Query;
import javax.persistence.Query;
import com.onlineBanking.entity.UserEntity;
import com.onlineBanking.model.User;


@Repository
public class RegisterDaoImpl implements RegisterDAO {

	
	@Autowired
	private EntityManager entityManager;
	
	
	@Override
	
    public UserEntity getUserByEmail(String email) {	
		// TODO Auto-generated method stub
		Session currentSession = entityManager.unwrap(Session.class);
		Query query = currentSession.createQuery("from UserEntity where email = :email");
		query.setParameter("email", email);
		if(query.getResultList().size() > 0) {
			return (UserEntity) query.getResultList().get(0);		
			
		}
		return null;
	}

	
	@Override
	public void saveUser(UserEntity user) {
		Session currentSession = entityManager.unwrap(Session.class);
		currentSession.saveOrUpdate(user);
	}


	
}


-------------------------------------model class---------------------------


package com.onlineBanking.model;

public class User {

	private String accountNum;

	//private String userName;

	private String email;

	private String password;
	
	

	public String getAccountNum() {
		return accountNum;
	}

	public void setAccountNum(String accountNum) {
		this.accountNum = accountNum;
	}

/*	public String getUserName() {
		return userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}
*/
	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}
}



package com.onlineBanking.model;

public class LoginModel {

	private String email;
	
	private String password;

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

}


-----------------------------------ENtity class---------------------------------


package com.onlineBanking.entity;


import javax.persistence.Column;
import javax.persistence.Entity;

import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;


import javax.persistence.Table;

@Entity
@Table(name="Register")
public class UserEntity {

	


		
	    @Id
		@GeneratedValue(strategy = GenerationType.IDENTITY)
		@Column(name = "user_id")
		private int id;
		
		//@Column(name="acctnumber")
		@Column(unique=true,name="acctnumber")
		private String acctNumber;
		
		//@Column(name="username")
		/*@Column(unique=true)
		private String username;*/
		
		
		@Column(unique=true)
		private String email;
		
		@Column(name = "password")
		private String password;
		
	   
		
		

	
		public String getAcctNumber() {
			return acctNumber;
		}

		public void setAcctNumber(String acctNumber) {
			this.acctNumber = acctNumber;
		}

		/*public String getUserName() {
			return username;
		}

		public void setUserName(String userName) {
			this.username = userName;
		}*/

		public int getId() {
			return id;
		}

		public void setId(int id) {
			this.id = id;
		}


	

		public String getEmail() {
			return email;
		}

		public void setEmail(String email) {
			this.email = email;
		}

		public String getPassword() {
			return password;
		}

		public void setPassword(String password) {
			this.password = password;
		}

		
}




======================application.properties==================================file



# Spring Datasource (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.url = jdbc:postgresql://localhost:5432/Infysure
#spring.datasource.username = root
#spring.datasource.password = root
spring.datasource.url = jdbc:postgresql://localhost:5432/onlineBanking
spring.datasource.username=postgres
spring.datasource.password=admin
# JPA & Hibernate Configuration
#=====================================
spring.jpa.properties.jpa.show-sql=true
#spring.jpa.generate-ddl = false
#spring.jpa.hibernate.ddl-auto =none

#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL9Dialect

# JPA & Hibernate Configuration
#=====================================
#spring.jpa.properties.jpa.show-sql=true
spring.jpa.generate-ddl = true
spring.jpa.hibernate.ddl-auto =update
#spring.jpa.properties.hbm2ddl.auto=update
#spring.jpa.properties.hbm2ddl.auto=create

spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true


================================pom.xml=================================

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>bankapp</groupId>
  <artifactId>BankApp</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  
  
  <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.6.RELEASE</version>
    </parent>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <scope>test</scope>
        </dependency>
        
        
        <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
	

		<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
		
		
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
    </dependencies>

    <properties>
        <java.version>1.8</java.version>
    </properties>


    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>


====================main application spring boot======================


package com.onlineBanking;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;

@SpringBootApplication
//@EnableAutoConfiguration(exclude={DataSourceAutoConfiguration.class})
public class Application {

    public static void main(String[] args) {
        SpringApplication.run(Application.class, args);
    }
}


















